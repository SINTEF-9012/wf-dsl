grammar workflow.WfDsl with org.eclipse.xtext.common.Terminals 
generate wfDsl "http://www.WfDsl.workflow" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
 
WFModel:
	Workflow += Workflow*;	
Workflow:
	'workflow' 
	name = ID 
	('extends' base = [Workflow])? 
	'{'		
		('communicationMedium:' communicationMedium = CommunicationMedium)
		('parameters:' (params += InputParameter (',' params += InputParameter)*))?		
		('steps:' ('-' steps += Step ('-' steps += Step)*)+)	'}'; 
Step:	
	'step' name = ID 
		('triggers:' (triggers += Trigger (',' triggers += Trigger)*)+ )
		('implementation:' implementation = StepImplementation)
		('parameters:' (params += InputParameter (',' params += InputParameter)*))?		
		('environment:' (environment += EnvironmentVariable (',' environment += EnvironmentVariable)*))?
		('previous:' ('none' |  (previous += [Step] (',' previous += [Step])*)))?; 
CommunicationMedium:
	'medium' type = CommunicationMediumTypes;
StepImplementation:
	DockerImplementation; 	
DockerImplementation:
	'docker-implementation' ('image:' startTime = STRING);
Trigger:
	OneTimeTrigger | ScheduleTrigger | ExternalEventTrigger;
OneTimeTrigger:
	{OneTimeTrigger} 
	'one-time'
	(startTime = STRING)?; 	
ScheduleTrigger:
	IntervalSchedule | CronSchedule;				
ExternalEventTrigger:
	{ExternalEventTrigger}
	'external-event';	
IntervalSchedule:
	{IntervalSchedule}
	'interval-schedule'
	('frequency:' frequency = TimeUnits)?
	('interval:' interval = INT)?
	('start-time:' startTime = STRING)?;
CronSchedule:
	{CronSchedule}
	'cron-schedule'
	('start-time:' startTime = STRING)?
	('cron:' cron = STRING)?;	
Parameter:
	InputParameter | EnvironmentVariable;

InputParameter:	
	(name = ID ( '=' value = ParameterValueTypes)?) | 
	value = ParameterValueTypes ;
EnvironmentVariable:
	name = ID
	'=' value = STRING;			
ParameterValueTypes: 
	{StringType} value = STRING |
	{IntType} value = INT |
	{BoolType} value = BOOL_LITERAL |
	{Identifier} value = ID;
enum CommunicationMediumTypes:
 	MESSAGE_QUEUE | DISTRIBUTED_FILE_SYSTEM | WEB_SERVICE;
enum TimeUnits:
	SECOND | MINUTE | HOUR | DAY | WEEK | MONTH; 
terminal BOOL_LITERAL returns ecore::EBoolean:
	'true' | 'false';